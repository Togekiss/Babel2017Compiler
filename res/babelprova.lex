<const, const>
<identificador, prova_a>
<igual, =>
<ct_cadena, "ho%&/ajn lÂ·l egfdsa">
<punt_i_coma, ;>
<var, var>
<ct_enter, 467>
<identificador, bhjbsa>
<dos_punts, :>
<tipus_simple, sencer>
<punt_i_coma, ;>
<var, var>
<identificador, iflifegivesyoulemonsdontmakelem>
<dos_punts, :>
<vector, vector>
<claudator_obert, [>
<ct_logica, cert>
<resta, ->
<ct_enter, 4>
<claudator_tancat, ]>
<de, de>
<tipus_simple, logic>
<punt_i_coma, ;>
<funcio, funcio>
<identificador, funcioprova>
<parentesi_obert, (>
<perref, perref>
<identificador, variable_1>
<dos_punts, :>
<tipus_simple, sencer>
<coma, ,>
<perval, perval>
<identificador, variable2>
<dos_punts, :>
<tipus_simple, logic>
<parentesi_tancat, )>
<dos_punts, :>
<tipus_simple, sencer>
<punt_i_coma, ;>
<var, var>
<identificador, a>
<dos_punts, :>
<tipus_simple, sencer>
<punt_i_coma, ;>
<func, func>
<identificador, admin>
<igual, =>
<claudator_obert, [>
<ct_enter, 5736>
<claudator_tancat, ]>
<or, or>
<ct_cadena, "hola">
<interrogant, ?>
<and, and>
<dos_punts, :>
<not, not>
<punt_i_coma, ;>
<escriure, escriure>
<parentesi_obert, (>
<identificador, hola>
<coma, ,>
<ct_cadena, "adeu">
<parentesi_tancat, )>
<punt_i_coma, ;>
<llegir, llegir>
<cicle, cicle>
<identificador, fins>
<oper_rel, <>>
<oper_rel, >>
<oper_rel, <>
<oper_rel, ==>
<oper_rel, <=>
<oper_rel, >=>
<fifunc, fifunc>
<punt_i_coma, ;>
<prog, prog>
<mentre, mentre>
<fer, fer>
<divisio, />
<fimentre, fimentre>
<si, si>
<llavors, llavors>
<resta, ->
<sino, sino>
<fisi, fisi>
<retornar, retornar>
<suma, +>
<percada, percada>
<identificador, id>
<en, en>
<multiplicacio, *>
<multiplicacio, *>
<multiplicacio, *>
<identificador, id>
<fer, fer>
<fiper, fiper>
<fiprog, fiprog>
<eof, eof>
